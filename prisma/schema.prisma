// npx prisma migrate dev --name ...
// npx prisma db seed

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id       String  @id(map: "PK_9309532197a7397548e341e5536") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name     String  @db.VarChar
  isActive Boolean @default(true)
  User     User[]
}

model User {
  createdDate DateTime @default(now()) @db.Timestamptz(6)
  id          String   @id(map: "PK_9862f679340fb2388436a5ab3e4") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  firstName   String   @db.VarChar
  lastName    String   @db.VarChar
  email       String   @unique @db.VarChar
  password    String   @db.VarChar
  roleId      String   @db.Uuid
  isActive    Boolean  @default(true)
  role        Role     @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_0b8c60cc29663fa5b9fb108edd7")
  log         Log[]
}

model Log {
  id                String           @id(map: "PK_db6e55781ba6e3d4fd6485cca24") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  typeId            String?          @db.Uuid
  productCategoryId String?          @db.Uuid
  createdById       String?          @db.Uuid
  createdDate       DateTime         @default(now()) @db.Timestamptz(6)
  isActive          Boolean          @default(true)
  User              User?            @relation(fields: [createdById], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_88299ef9a14cb86c9befb535d76")
  ProductCategory   ProductCategory? @relation(fields: [productCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_a47b7680906e07270c2ee190569")
  LogType           LogType?         @relation(fields: [typeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c4036eeca8928b5ce7848c3f1c4")

  @@map("Log")
}

model LogType {
  id   String @id(map: "PK_a7cfdf632ad7bb014e67183da00") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name String @db.VarChar
  Log  Log[]
}

model ProductCategory {
  createdDate         DateTime             @default(now()) @db.Timestamptz(6)
  isActive            Boolean              @default(true)
  id                  String               @id(map: "PK_e92698845b7004ef04fe046816f") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title               String               @db.VarChar
  order               Int
  typeId              String?              @db.Uuid
  Log                 Log[]
  ProductCategoryType ProductCategoryType? @relation(fields: [typeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3396a6ae1dbd72159a63978fccf")
  Product             Product[]
}

model ProductCategoryType {
  createdDate     DateTime          @default(now()) @db.Timestamptz(6)
  isActive        Boolean           @default(true)
  id              String            @id(map: "PK_d2efbbbac2d3f39560f7cf497da") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name            String            @db.VarChar
  ProductCategory ProductCategory[]
}

model Product {
  createdDate     DateTime         @default(now()) @db.Timestamptz(6)
  isActive        Boolean          @default(true)
  id              String           @id(map: "PK_6e8f75045ddcd1c389c765c896e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title           String           @db.VarChar
  description     String           @db.VarChar
  imgUrl          String           @db.VarChar
  order           Int
  price           Int
  categoryId      String?          @db.Uuid
  ProductCategory ProductCategory? @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_641188cadea80dfe98d4c769ebf")
}
